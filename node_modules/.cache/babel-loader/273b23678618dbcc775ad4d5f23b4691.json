{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; // importing required companants and functions\n\nimport PeopleList from './PeopleList';\nimport Button from './Button.js'; // standard Syntax that allows changes to state\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      array: [],\n      selection: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onButtonSelection\",\n    value: function onButtonSelection(type) {\n      this.setState({\n        selection: type\n      });\n    } // Life Cylce Hook: This pulls that API data, converts to Json (read by all browsers) and sets the data as the state of the empty array above.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          array = _this$state.array,\n          selection = _this$state.selection; // in order to allow other componants, to use the current state of the array, i have created a variable \"array\" and used deconstruction below to pass this variable to PeopleList\n\n      if (this.state.selection === 'people') {\n        fetch('https://swapi.co/api/people/').then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return _this2.setState({\n            array: data.results\n          });\n        }); // above I have used \"data.results\", to specifically set the results section of the array pulled from the API \n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" Star Wars API\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" Use the Buttons to search for Movie data\"), React.createElement(Button, {\n        onButtonSelection: onButtonSelection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(PeopleList, {\n        array: array,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Al & Laura\\Desktop\\starwars-api\\src\\App.js"],"names":["React","Component","PeopleList","Button","App","state","array","selection","type","setState","fetch","then","response","json","data","results","onButtonSelection"],"mappings":";;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;IACMC,G;;;;;AAEH,iBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFa;AAMd;;;;sCAEiBC,I,EAAM;AACxB,WAAKC,QAAL,CAAc;AAACF,QAAAA,SAAS,EAAEC;AAAZ,OAAd;AACD,K,CACD;;;;6BAGW;AAAA;;AAAA,wBACoB,KAAKH,KADzB;AAAA,UACAC,KADA,eACAA,KADA;AAAA,UACOC,SADP,eACOA,SADP,EAEP;;AACA,UAAI,KAAKF,KAAL,CAAWE,SAAX,KAAyB,QAA7B,EAAuC;AACjCG,QAAAA,KAAK,CAAC,8BAAD,CAAL,CACHC,IADG,CACE,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SADV,EAEHF,IAFG,CAEE,UAAAG,IAAI;AAAA,iBAAI,MAAI,CAACL,QAAL,CAAc;AAACH,YAAAA,KAAK,EAACQ,IAAI,CAACC;AAAZ,WAAd,CAAJ;AAAA,SAFN,EADiC,CAIrC;AACH;;AAEC,aAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFA,EAGA,oBAAC,MAAD;AAAQ,QAAA,iBAAiB,EAAGC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EAIA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAIV,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CAHD;AAYH;;;;EAtCiBL,S;;AAyClB,eAAeG,GAAf","sourcesContent":["\n\nimport React, { Component } from 'react';\n// importing required companants and functions\nimport PeopleList from './PeopleList';\nimport Button from './Button.js';\n\n// standard Syntax that allows changes to state\nclass App extends Component {\n\n   constructor() {\n    super()\n    this.state = {\n      array: [],\n      selection: '',\n    };\n  }\n\n onButtonSelection (type) {\n  this.setState({selection: type});\n}\n// Life Cylce Hook: This pulls that API data, converts to Json (read by all browsers) and sets the data as the state of the empty array above.\n \n\n  render() {\n    const {array, selection} = this.state;\n    // in order to allow other componants, to use the current state of the array, i have created a variable \"array\" and used deconstruction below to pass this variable to PeopleList\n    if (this.state.selection === 'people' ){\n          fetch('https://swapi.co/api/people/') \n      .then(response => response.json())\n      .then(data => this.setState({array:data.results}));\n      // above I have used \"data.results\", to specifically set the results section of the array pulled from the API \n  }\n    \n    return (\n    \n \n     <div>\n     <h1> Star Wars API</h1>\n     <h2> Use the Buttons to search for Movie data</h2>\n     <Button onButtonSelection ={onButtonSelection}/>\n     <PeopleList array = {array}/>\n     </div> \n    \n    );\n\n}}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}