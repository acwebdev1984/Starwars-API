{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Al & Laura\\\\Desktop\\\\starwars-api\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PeopleList from './PeopleList';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      array: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://swapi.co/api/people/') // fetching the array from the API\n      .then(function (response) {\n        return response.json();\n      }) // Returning that Data in a json format\n      .then(function (data) {\n        _this2.setState({\n          array: data.results.key\n        });\n      }); // Changing the state of array, set in the constructor above. Note that we use data.results as the results part of the return constain the data we are interested in.\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var array = this.state.array; // we want to be able to pass the state ( in this case the array of data) to our PeopleList, so we create a variable.\n\n      console.log(array);\n      return React.createElement(PeopleList, {\n        array: array,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }) // we pass this variable as a PROP to the PeopleList Card\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Al & Laura\\Desktop\\starwars-api\\src\\App.js"],"names":["React","Component","PeopleList","App","state","array","fetch","then","response","json","data","setState","results","key","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,G;;;;;AAEH,iBAAc;AAAA;;AAAA;;AACb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFa;AAMd;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAAC,8BAAD,CAAL,CAAsC;AAAtC,OACGC,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAGA,QAAQ,CAACC,IAAT,EAAH;AAAA,OADhB,EACoC;AADpC,OAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AAAC,QAAA,MAAI,CAACC,QAAL,CAAe;AAACN,UAAAA,KAAK,EAACK,IAAI,CAACE,OAAL,CAAaC;AAApB,SAAf;AAA0C,OAF3D,EADkB,CAG4C;AAE/D;;;6BAEQ;AACP,UAAMR,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB,CADO,CACwB;;AAC/BS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AAIA,aACA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAIA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CACgC;AADhC;AAIH;;;;EA3BiBJ,S;;AA4BlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport PeopleList from './PeopleList';\n\n\nclass App extends Component {\n\n   constructor() {\n    super()\n    this.state = {\n      array: [],\n\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://swapi.co/api/people/') // fetching the array from the API\n      .then(response=> response.json()) // Returning that Data in a json format\n      .then(data => {this.setState( {array:data.results.key} )}); // Changing the state of array, set in the constructor above. Note that we use data.results as the results part of the return constain the data we are interested in.\n\n  }\n\n  render() {\n    const array = this.state.array // we want to be able to pass the state ( in this case the array of data) to our PeopleList, so we create a variable.\n    console.log(array);\n\n    \n\n    return (\n    <PeopleList array = {array}  /> // we pass this variable as a PROP to the PeopleList Card\n    );\n\n}}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}